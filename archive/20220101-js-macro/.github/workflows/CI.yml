name: build
env:
  DEBUG: napi:*
  APP_NAME: js-macro
'on':
  push:
    branches:
      - main
    tags-ignore:
      - '**'
    paths:
      - '.github/workflows/CI.yml'
      - 'src/**'
jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        settings:
          - host: windows-latest
            build: npm run build
            target: x86_64-pc-windows-msvc
            architecture: x64
          - host: windows-latest
            build: |
              node ./node_modules/@napi-rs/cli/scripts/index.js build --platform --release --target=i686-pc-windows-msvc
            target: i686-pc-windows-msvc
            architecture: x86
          - host: windows-latest
            architecture: x64
            target: aarch64-pc-windows-msvc
            build: |
              node ".\node_modules\@napi-rs\cli\scripts\index.js" build --platform --release --target=aarch64-pc-windows-msvc
    name: stable - ${{ matrix.settings.target }} - node@18
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true
          architecture: ${{ matrix.settings.architecture }}
      - name: Install
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: ${{ matrix.settings.target }}
      - name: Pull latest image
        run: ${{ matrix.settings.docker }}
        env:
          DOCKER_REGISTRY_URL: ghcr.io
        if: ${{ matrix.settings.docker }}
      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash
      - name: Install dependencies
        run: npm install --save-dev --ignore-scripts
      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bindings-${{ matrix.settings.target }}
          path: |
            ${{ env.APP_NAME }}.*.node
          if-no-files-found: error
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true
      - name: Install dependencies
        run: npm install --save-dev --ignore-scripts
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Move artifacts
        run: npm run artifacts
      - name: Publish 
        run: |
          npx tsc
          if git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --access public
          elif git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --tag next --access public
          else
            echo "Not a release, skipping publish"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Commit index.d.ts
        uses: EndBug/add-and-commit@v9
        with:
          add: 'index.d.ts'
          message: 'chore: update index.d.ts'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}